import{_ as e,c as E,k as s,a as i,t as n,R as a,o as r}from"./chunks/framework.BmksyVjO.js";const d="/assets/%E5%8C%85%E5%90%AB%E5%86%85%E9%83%A8%E6%B5%AE%E5%8A%A8.VAigAfRi.png",g="/assets/%E4%B8%8D%E5%92%8C%E5%90%8E%E5%8F%B0margin%E5%90%88%E5%B9%B6.C46ogCwY.png",o="/assets/%E6%8E%92%E9%99%A4%E5%A4%96%E9%83%A8%E6%B5%AE%E5%8A%A8.Bj5AELMC.png",y="/assets/%E9%98%B2%E6%8A%96%E8%8A%82%E6%B5%81%E5%9B%BE%E8%A7%A3.B4it7Xwz.png",c="/assets/%E6%A8%A1%E5%9D%97%E5%8C%96%E5%B0%8F%E7%BB%93.D7o1Ut43.png",F="/assets/constlet%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F.Cdfj0Wdl.png",u="/assets/%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C1.D9EN67ip.png",C="/assets/%E8%BF%9E%E7%BB%AD%E8%B5%8B%E5%80%BC%E7%9A%84%E5%9D%91.BrCDTdP2.png",A="/assets/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.Bmk7b177.png",D="/assets/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C4%E6%AC%A1%E6%8C%A5%E6%89%8B%E5%9B%BE%E8%A7%A3.CtUdvPYr.png",B="/assets/HTTPS%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E9%AA%8C%E8%AF%81%E5%92%8C%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E5%9B%BE%E8%A7%A3.DJi2YB7R.png",m="/assets/%E9%87%8D%E5%AE%9A%E5%90%91%E5%AF%B9SEO%E7%9A%84%E5%BD%B1%E5%93%8D.r7-BXj9Z.png",b="/assets/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.BOu-bH1b.png",v="/assets/Vue3%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96._X4ZwQf9.png",f="/assets/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E5%9B%BE%E8%A7%A3.Dhnadh70.png",q="/assets/sleepGenerator.d1HgMX_S.png",x="/assets/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3.Boih4cdV.webp",V="/assets/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F_%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F.Bg2yC4mV.png",bs=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"offer/index.md","filePath":"offer/index.md"}'),w={name:"offer/index.md"},j=a("",661),P=a("",2),_=s("strong",null,"【触发依赖】",-1),S=s("code",null,"render-watcher",-1),M=s("code",null,"this.user.name",-1),I=a("",3),T=s("strong",null,"【循环往复】",-1),O=s("strong",null,"步骤4到步骤6",-1),R=s("code",null,"render-watcher",-1),N=s("li",null,[s("p",null,[s("strong",null,"【清理现场】"),i("：当整个渲染函数执行完毕，"),s("code",null,"render-watcher"),i(" 会把自己从“靶心”位置移开（"),s("code",null,"Dep.target = null"),i("），避免后续不必要的依赖收集。”")])],-1),L=a("",66),H=a("",1),W=s("strong",null,"依赖收集：",-1),U=s("code",null,"getter",-1),Q=s("code",null,"getter",-1),$=s("code",null,"dirty",-1),G=a("",1),J=s("li",null,[s("strong",null,"更新机制："),i(" 当计算属性依赖的数据发生变化时，会通知这个 "),s("code",null,"computed Watcher"),i("。但它"),s("strong",null,"不会立即重新计算"),i("，而是仅仅把自己的 "),s("code",null,"dirty"),i(" 标记设置为 "),s("code",null,"true"),i("。这样，下次在模板中读取它时，它就会重新计算并缓存新值。这种机制避免了不必要的计算，优化了性能。")],-1),z=a("",132),X=s("li",null,[s("strong",null,[s("code",null,"reactive")]),i("：直接访问和修改属性即可，符合直觉。")],-1),K=s("li",null,[s("strong",null,[s("code",null,"ref")]),i("：必须通过 "),s("code",null,".value"),i(" 属性来读写。")],-1),Y=s("strong",null,"在模板中",-1),Z=s("code",null,"ref",-1),ss=s("strong",null,"解包（Unwrap）",-1),is=s("code",null,"reactive",-1),as=a("",91),ns=s("li",null,[s("p",null,[s("strong",null,"原理"),i("：")]),s("ul",null,[s("li",null,[s("code",null,"v-html"),i("用于更新元素的"),s("code",null,"innerHTML"),i("。它会将数据解析为普通HTML并插入到指定元素中。")])])],-1),hs=s("strong",null,"注意",-1),ls=s("strong",null,"忽略",-1),ts=a("",1),ks=a("",882),ps=s("li",null,[s("strong",null,"发布者（Dep）"),i("：每个响应式对象的属性都有一个 Dep 实例，用来收集依赖（订阅者）。")],-1),es=s("li",null,[s("strong",null,"订阅者（Watcher）"),i("：通常是组件的渲染函数、计算属性或者用户自定义的 watch。当数据变化时，Dep 会通知所有订阅它的 Watcher 进行更新。")],-1),Es=s("strong",null,"流程",-1),rs=s("code",null,"message",-1),ds=s("code",null,"getter",-1),gs=s("code",null,"message",-1),os=s("code",null,"message",-1),ys=s("code",null,"setter",-1),cs=a("",481);function Fs(h,us,Cs,As,Ds,Bs){var l,t,k,p;return r(),E("div",null,[j,s("ol",null,[P,s("li",null,[s("p",null,[_,i("：现在，"),S,i(" 开始执行渲染函数。假设我们的模板里有 "),s("code",null,n((l=h.user)==null?void 0:l.name),1),i("，渲染函数执行时就会去读取 "),M,i("。")])]),I,s("li",null,[s("p",null,[T,i("：渲染函数会继续执行，读取所有在模板中用到的数据（比如 "),s("code",null,n((t=h.user)==null?void 0:t.age),1),i(", "),s("code",null,n((k=h.book)==null?void 0:k.title),1),i("）。每读取一个属性，上述 "),O,i(" 就会重复一次。这样，所有被模板用到的响应式数据，都会与这个 "),R,i(" 建立起依赖关系。")])]),N]),L,s("ol",null,[H,s("li",null,[W,i(" 当我们在模板中读取 "),s("code",null,n(h.computedValue),1),i(" 时，会触发计算属性的 "),U,i("。"),Q,i(" 会检查 "),$,i(" 标志： "),G]),J]),z,s("ul",null,[X,K,s("li",null,[Y,i("：Vue 编译器会自动对 "),Z,i(" 进行"),ss,i("，所以模板中可以直接写 "),s("code",null,n(h.count),1),i(" 而不是 "),s("code",null,n((p=h.count)==null?void 0:p.value),1),i("。而 "),is,i(" 对象的属性则始终保持直接访问。")])]),as,s("ul",null,[ns,s("li",null,[s("p",null,[hs,i("： 这会"),ls,i("数据绑定中的HTML内容插值（"),s("code",null,n(),1),i("），因为Vue的模板语法是基于字符串的，不能直接解释HTML标签。 直接渲染HTML非常危险，容易导致XSS攻击，所以绝不能用于用户提交的内容。")])]),ts]),ks,s("ul",null,[ps,es,s("li",null,[Es,i("：我们在模板中读取 "),s("code",null,n(h.message),1),i("，这个过程会触发 "),rs,i(" 的 "),ds,i("，将当前的 Watcher（订阅者）收集到 "),gs,i(" 对应的 Dep（发布者）中。当我们修改 "),os,i(" 时，会触发 "),ys,i("，由 Dep 通知所有 Watcher，从而完成组件的重新渲染。")])]),cs])}const vs=e(w,[["render",Fs]]);export{bs as __pageData,vs as default};
